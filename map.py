import pygame as pg
from pygame.locals import *
from settings import HALF_HEIGHT, HALF_WIDTH


_ = False

#map layout

'''add your three maps 20x10 like the ones below and label it time_map_1, time_map_2, time_map_3(basically change the maps you have below)

the start and end x and y values can be determined like this (counting from 0)
[
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, start(1), _, _, _, _, _, 1, 1, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, _, _, _, 1, _, _, _, _, 1],
    [ 1, _, _, _, 1, 1, _, 1, 1, _, _, _, _, _, 1, _, _, _, 1, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, end(1), 1],
    [ 1, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1],
    [ 1, _, _, _, _, 1, _, 1, 1, _, _, _, _, _, _, _, _, end(2), end(2), 1],
    [ 1, _, _, start(2), _, _, _, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]
 start should always be an exact .5 value: 
 start(1)= (1.5, 1.5)
 start(2)= (3.5,7.5)

 end should always be a one block bound at minimum(can make it as big as u want)
 end(1): 18<x<19 and 4<y<5
 end(2): 17<x<19 and 6<y<7

 if you dont want to add specific start values then its defaulted as (1.5,1,5) which is the safest option meaning you dont have to change code
 otherwise:
 go to testbutton() in editor.py and uncomment the lines and add the start pos values for each of the 3 modes
 eg: 
 #self.game.player.x, self.game.player.y = (3.5,7.5)
 then go to mainmenu.py line 85 and change the pos = and time = arguements for time game 1 
 then go to endgame.py line 388 and 396 and change the pos = and time = arguements for time game 2 and 3

 for end points (you have to do this), change the x,y value in the if statement condition in player.py on line 281(game 1), 393(game 2), 307(game3)

 

'''
mini_map = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, _, _, _, 1, _, _, _, _, 1],
    [ 1, _, _, _, 1, 1, _, 1, 1, _, _, _, _, _, 1, _, _, _, 1, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1],
    [ 1, _, _, _, _, 1, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]


point_map1 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, _, _, _, _, _, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, _, 1, 1, _, _, _, _, 1, 1, _, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, _, 1, 1, 1, 1],
    [ 1, _, _, _, 1, 1, _, 1, 1, _, _, _, _, 1, 1, _, 1, 1, 1, 1],
    [ 1, _, _, _, 1, 1, _, 1, _, _, _, _, _, _, _, _, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

point_map2 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, _, _, 1, 1],
    [ 1, 1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, 1],
    [ 1, 1, _, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, _, _, _, 1],
    [ 1, 1, _, _, _, _, _, 1, 1, _, 1, 1, _, 1, 1, _, _, _, _, 1],
    [ 1, 1, _, 1, 1, 1, _, 1, 1, _, _, _, _, 1, 1, _, _, _, _, 1],
    [ 1, 1, _, 1, 1, 1, _, 1, 1, _, _, _, _, 1, 1, _, _, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, _, _, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1],
    [ 1, _, _, 1, 1, 1, _, 1, _, _, 1, _, _, _, _, _, _, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

point_map3 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, _, _, _, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, 1, _, 1, _, _, _, _, _, 1],
    [ 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, _, _, _, 1, _, 1, 1],
    [ 1, _, 1, _, 1, 1, _, 1, 1, _, 1, _, _, 1, 1, 1, 1, _, _, 1],
    [ 1, _, 1, _, 1, 1, _, 1, 1, _, 1, _, _, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, 1, _, 1, 1, _, _, _, _, 1, _, _, 1, _, _, _, 1, _, 1],
    [ 1, _, 1, 1, 1, _, _, 1, _, _, 1, 1, 1, 1, 1, 1, _, 1, _, 1],
    [ 1, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

time_map_1 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, 1],
    [ 1, 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1],
    [ 1, 1, 1, _, 1, 1, 1, 1, 1, 1, _, _, _, _, 1, 1, _, _, _, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1],
    [ 1, 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, 1, _, _, _, _, 1, 1, 1],
    [ 1, 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
time_map_2 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, _, 1],
    [ 1, 1, 1, _, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, _, _, 1, _, 1],
    [ 1, 1, 1, _, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, _, _, 1],
    [ 1, 1, 1, _, 1, 1, 1, _, _, _, _, 1, 1, _, 1, 1, 1, 1, _, 1],
    [ 1, _, _, _, _, _, 1, 1, 1, 1, _, _, _, _, 1, 1, 1, 1, _, 1],
    [ 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, _, _, 1],
    [ 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, _, _, 1, 1, 1],
    [ 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
time_map_3 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, _, _, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, 1, 1],
    [ 1, 1, _, 1, 1, _, _, _, _, _, 1, _, 1, 1, _, 1, 1, _, _, 1],
    [ 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, _, _, 1, _, _, 1, 1, _, 1],
    [ 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, 1],
    [ 1, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, 1, _, _, _, _, 1],
    [ 1, 1, _, _, _, _, _, 1, 1, _, 1, 1, 1, _, 1, 1, _, 1, 1, 1],
    [ 1, 1, _, 1, _, 1, _, 1, 1, _, 1, 1, 1, _, 1, 1, _, _, _, 1],
    [ 1, 1, _, _, _, 1, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]


older_time_map_1 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 1],
    [ 1, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

older_time_map_2 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1],
    [ 1, 1, 1, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

older_time_map_3 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [ 1, _, _, 1, 1, _, _, _, _, _, _, _, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, 1],
    [ 1, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, _, 1, _, _, 1],
    [ 1, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, 1],
    [ 1, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, 1],
    [ 1, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [ 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, 1],
    [ 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]
old_map = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, 1, 1, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, _, _, _, 1, 1, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, _, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, _, _, 1, 1, _, _, _, _, 1, _, _, _, _, 1, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, _, _, 1, 1, 1, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, 1, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, _, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, _, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, _, _, _, _, 1, _, _, _, _, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, _, 1, _, _, 1, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

old_map_2 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, 1, 1, _, _, _, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, _, _, _, _, _, 1, _, 1, 1],
    [ 1, 1, _, _, _, _, _, 1, 1, _, 1, _, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, _, 1, 1],
    [ 1, 1, _, 1, 1, 1, _, 1, 1, _, _, _, _, 1, 1, _, _, _, 1, 1, _, 1, 1, _, _, _, 1, 1],
    [ 1, 1, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, 1, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, _, 1, 1, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, _, _, 1, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, _, _, _, _, 1, 1, 1, 1],
    [ 1, 1, _, _, _, _, _, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1],
    [ 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
old_map_3 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, _, 1, _, _, _, _, _, _, 1, _, _, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, _, _, _, 1, 1],
    [ 1, _, 1, _, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, _, _, _, _, 1, 1, _, 1, 1, 1, 1, 1],
    [ 1, _, _, _, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, _, 1, _, 1, 1, 1],
    [ 1, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, _, _, 1, 1],
    [ 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, _, 1, 1, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, 1, _, _, _, 1, _, _, _, _, _, _, 1, _, 1, 1, _, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, 1, _, _, _, 1, 1, _, _, _, 1, _, _, _, _, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]

old_map_4 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, _, _, _, 1, 1, _, _, _, 1, 1],
    [ 1, _, 1, _, _, 1, 1, 1, 1, 1, _, _, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, 1, 1, 1, 1],
    [ 1, _, 1, 1, _, _, _, _, _, _, _, 1, 1, 1, 1, _, _, _, 1, 1, 1, 1, 1, _, _, _, 1, 1],
    [ 1, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, 1, _, _, _, 1, 1, 1, 1, 1, _, 1, 1],
    [ 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, 1, 1, 1, _, _, _, 1, 1, 1, _, _, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, _, _, _, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1, 1, 1],
    [ 1, 1, 1, _, 1, 1, 1, _, _, _, 1, 1, 1, 1, _, _, _, _, 1, 1, 1, 1, 1, _, _, _, _, 1],
    [ 1, 1, 1, _, _, _, _, _, 1, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

old_map_5 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, 1, 1, 1, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, _, 1, 1, 1, 1, 1, 1, _, 1, 1],
    [ 1, _, _, _, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, 1, 1, _, _, _, 1, 1, _, _, _, 1, 1],
    [ 1, _, 1, 1, 1, 1, 1, _, 1, 1, _, _, _, _, 1, _, 1, 1, 1, 1, _, _, _, _, 1, 1, 1, 1],
    [ 1, _, 1, 1, 1, _, _, _, _, _, _, 1, 1, 1, 1, _, _, _, 1, 1, 1, 1, 1, _, _, _, 1, 1],
    [ 1, _, _, _, _, 1, 1, _, 1, 1, 1, 1, _, _, _, _, 1, _, _, _, 1, 1, 1, 1, 1, _, 1, 1],
    [ 1, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1, 1, 1, _, _, _, _, 1, 1, _, _, 1],
    [ 1, _, _, _, 1, 1, 1, 1, 1, 1, _, 1, _, _, _, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, 1, 1],
    [ 1, 1, 1, _, 1, 1, _, _, _, 1, _, 1, _, 1, 1, 1, 1, 1, _, _, _, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, 1, _, _, _, 1, 1, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, _, _, 1, 1, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, 1, _, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]
old_map_6 = [
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, 1, _, _, _, 1, _, _, _, _, _, _, 1, 1, 1, 1, _, _, _, _, _, 1, 1, 1, _, _, 1],
    [ 1, 1, 1, _, 1, _, _, _, 1, 1, 1, 1, _, 1, 1, _, 1, _, 1, 1, 1, _, 1, 1, 1, _, 1, 1],
    [ 1, 1, _, _, _, 1, 1, 1, 1, 1, 1, _, _, _, 1, _, 1, _, _, 1, _, _, 1, 1, _, _, 1, 1],
    [ 1, 1, _, 1, _, 1, 1, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, _, 1, 1, 1, _, 1, 1, 1],
    [ 1, 1, _, _, _, _, _, _, 1, 1, 1, _, _, _, 1, _, _, _, _, 1, _, _, _, _, _, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, _, 1, _, _, _, 1, 1, _, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, 1],
    [ 1, _, _, _, _, 1, _, _, _, _, 1, _, _, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, 1, _, _, 1, 1, _, _, _, _, 1],
    [ 1, 1, _, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, _, _, _, 1, 1, _, _, _, _, 1, 1, 1, 1],
    [ 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, _, _, _, 1, 1, 1, _, 1, _, _, _, 1, 1, 1, _, _, 1],
    [ 1, 1, _, _, _, _, _, _, _, _, _, 1, _, _, 1, 1, _, _, _, _, 1, 1, 1, _, _, _, 1, 1],
    [ 1, 1, 1, _, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, _, _, _, _, _, 1, _, 1, _, 1, 1],
    [ 1, 1, 1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, 1, _, _, 1],
    [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]

class Map:
    def __init__(self, game, map_type):
        self.game = game
        if map_type == '-tutorial':
            self.mini_map = tutorial_map
        elif map_type == 'pointg1':
            self.mini_map = point_map1
        
        elif map_type == 'pointg2':
            self.mini_map = point_map2
        elif map_type == 'pointg3':
            self.mini_map = point_map3
        elif map_type == 'timeg1':
            self.mini_map = time_map_1
        
        elif map_type == 'timeg2':
            self.mini_map = time_map_2
        elif map_type == 'timeg3':
            self.mini_map = time_map_3
        else:
            self.mini_map = mini_map
        self.world_map = {}
        self.get_map()

    def get_map(self):
        '''*****************************************************************************************************

        Method: get_map --> Generates the worldmap dictionary based on map arrays

        Acknowledgement: Stanislav Petrov        
        https://github.com/StanislavPetrovV/DOOM-style-Game

        ********************************************************************************************************'''
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value

    def draw(self):
        '''*****************************************************

        Method: draw --> Draws the 2D minimap based on map type 

        *********************************************************'''
        pg.draw.rect(self.game.screen,'brown',(HALF_WIDTH*2-25*20-10,HALF_HEIGHT*2-10*25 ,25*30,25*25))

        for pos in self.world_map:
            s = pg.display.get_surface()
            r = pg.Rect(pos[0] * 25+HALF_WIDTH*2-25*20-10, pos[1] * 25+HALF_HEIGHT*2-10*25, 25, 25)
            #r = r.move(500,500)
            s.fill(Color("red"), r)
        [pg.draw.rect(self.game.screen, 'yellow', (pos[0] * 25 +HALF_WIDTH*2-25*20-10, pos[1] * 25+HALF_HEIGHT*2-10*25, 25, 25), 1)
        for pos in self.world_map]