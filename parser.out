Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN SYMBOL_RPAREN
Rule 2     expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN
Rule 3     expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN FORWARD SYMBOL_RPAREN
Rule 4     expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON
Rule 5     expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

Terminals, with rules where they appear

FORWARD              : 3
INTEGER              : 4 5 5
KEYWORD_FOR          : 4 5
KEYWORD_IN           : 4 5
KEYWORD_RANGE        : 4 5
SYMBOL_COLON         : 4 5
SYMBOL_COMMA         : 5
SYMBOL_LPAREN        : 1 2 3 4 5
SYMBOL_POINT         : 1 2 3
SYMBOL_RPAREN        : 1 2 3 4 5
VALID_STRING         : 1 1 2 2 2 3 3 4 5
error                : 

Nonterminals, with rules where they appear

expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN SYMBOL_RPAREN
    (2) expression -> . VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN
    (3) expression -> . VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN FORWARD SYMBOL_RPAREN
    (4) expression -> . KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> . KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    VALID_STRING    shift and go to state 2
    KEYWORD_FOR     shift and go to state 3

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> VALID_STRING . SYMBOL_POINT VALID_STRING SYMBOL_LPAREN SYMBOL_RPAREN
    (2) expression -> VALID_STRING . SYMBOL_POINT VALID_STRING SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN
    (3) expression -> VALID_STRING . SYMBOL_POINT VALID_STRING SYMBOL_LPAREN FORWARD SYMBOL_RPAREN

    SYMBOL_POINT    shift and go to state 4


state 3

    (4) expression -> KEYWORD_FOR . VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> KEYWORD_FOR . VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    VALID_STRING    shift and go to state 5


state 4

    (1) expression -> VALID_STRING SYMBOL_POINT . VALID_STRING SYMBOL_LPAREN SYMBOL_RPAREN
    (2) expression -> VALID_STRING SYMBOL_POINT . VALID_STRING SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN
    (3) expression -> VALID_STRING SYMBOL_POINT . VALID_STRING SYMBOL_LPAREN FORWARD SYMBOL_RPAREN

    VALID_STRING    shift and go to state 6


state 5

    (4) expression -> KEYWORD_FOR VALID_STRING . KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> KEYWORD_FOR VALID_STRING . KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    KEYWORD_IN      shift and go to state 7


state 6

    (1) expression -> VALID_STRING SYMBOL_POINT VALID_STRING . SYMBOL_LPAREN SYMBOL_RPAREN
    (2) expression -> VALID_STRING SYMBOL_POINT VALID_STRING . SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN
    (3) expression -> VALID_STRING SYMBOL_POINT VALID_STRING . SYMBOL_LPAREN FORWARD SYMBOL_RPAREN

    SYMBOL_LPAREN   shift and go to state 8


state 7

    (4) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN . KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN . KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    KEYWORD_RANGE   shift and go to state 9


state 8

    (1) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN . SYMBOL_RPAREN
    (2) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN . VALID_STRING SYMBOL_RPAREN
    (3) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN . FORWARD SYMBOL_RPAREN

    SYMBOL_RPAREN   shift and go to state 11
    VALID_STRING    shift and go to state 10
    FORWARD         shift and go to state 12


state 9

    (4) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE . SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE . SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    SYMBOL_LPAREN   shift and go to state 13


state 10

    (2) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN VALID_STRING . SYMBOL_RPAREN

    SYMBOL_RPAREN   shift and go to state 14


state 11

    (1) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN SYMBOL_RPAREN .

    $end            reduce using rule 1 (expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN SYMBOL_RPAREN .)


state 12

    (3) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN FORWARD . SYMBOL_RPAREN

    SYMBOL_RPAREN   shift and go to state 15


state 13

    (4) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN . INTEGER SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN . INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    INTEGER         shift and go to state 16


state 14

    (2) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN .

    $end            reduce using rule 2 (expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN VALID_STRING SYMBOL_RPAREN .)


state 15

    (3) expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN FORWARD SYMBOL_RPAREN .

    $end            reduce using rule 3 (expression -> VALID_STRING SYMBOL_POINT VALID_STRING SYMBOL_LPAREN FORWARD SYMBOL_RPAREN .)


state 16

    (4) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER . SYMBOL_RPAREN SYMBOL_COLON
    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER . SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON

    SYMBOL_RPAREN   shift and go to state 17
    SYMBOL_COMMA    shift and go to state 18


state 17

    (4) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN . SYMBOL_COLON

    SYMBOL_COLON    shift and go to state 19


state 18

    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA . INTEGER SYMBOL_RPAREN SYMBOL_COLON

    INTEGER         shift and go to state 20


state 19

    (4) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON .

    $end            reduce using rule 4 (expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_RPAREN SYMBOL_COLON .)


state 20

    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER . SYMBOL_RPAREN SYMBOL_COLON

    SYMBOL_RPAREN   shift and go to state 21


state 21

    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN . SYMBOL_COLON

    SYMBOL_COLON    shift and go to state 22


state 22

    (5) expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON .

    $end            reduce using rule 5 (expression -> KEYWORD_FOR VALID_STRING KEYWORD_IN KEYWORD_RANGE SYMBOL_LPAREN INTEGER SYMBOL_COMMA INTEGER SYMBOL_RPAREN SYMBOL_COLON .)

